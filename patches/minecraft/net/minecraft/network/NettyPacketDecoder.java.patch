--- before/net/minecraft/network/NettyPacketDecoder.java
+++ after/net/minecraft/network/NettyPacketDecoder.java
@@ -22,49 +22,44 @@
     }
 
     @Override
-    protected void decode(ChannelHandlerContext p_decode_1_, ByteBuf p_decode_2_, List<Object> p_decode_3_) throws IOException, InstantiationException, IllegalAccessException, Exception
-    {
-        if (p_decode_2_.readableBytes() != 0)
-        {
-            PacketBuffer packetbuffer = new PacketBuffer(p_decode_2_);
-            int i = packetbuffer.func_150792_a();
-            Packet<?> packet = p_decode_1_.channel().attr(NetworkManager.field_150739_c).get().func_179244_a(this.field_152499_c, i);
-
-            if (packet == null)
-            {
-                throw new IOException("Bad packet id " + i);
-            }
-            else
-            {
-                packet.func_148837_a(packetbuffer);
-
-                if (packetbuffer.readableBytes() > 0)
-                {
-                    throw new IOException(
-                        "Packet "
-                        + p_decode_1_.channel().attr(NetworkManager.field_150739_c).get().func_150759_c()
-                        + "/"
-                        + i
-                        + " ("
-                        + packet.getClass().getSimpleName()
-                        + ") was larger than I expected, found "
-                        + packetbuffer.readableBytes()
-                        + " bytes extra whilst reading packet "
-                        + i
-                    );
-                }
-                else
-                {
-                    p_decode_3_.add(packet);
-
-                    if (field_150800_a.isDebugEnabled())
-                    {
-                        field_150800_a.debug(
-                            field_150799_b, " IN: [{}:{}] {}", p_decode_1_.channel().attr(NetworkManager.field_150739_c).get(), i, packet.getClass().getName()
+    protected void decode(ChannelHandlerContext p_decode_1_, ByteBuf p_decode_2_, List<Object> p_decode_3_) throws IOException, InstantiationException, IllegalAccessException, Exception {
+        try {
+            if (p_decode_2_.readableBytes() != 0) {
+                PacketBuffer packetbuffer = new PacketBuffer(p_decode_2_);
+                int i = packetbuffer.func_150792_a();
+                Packet<?> packet = p_decode_1_.channel().attr(NetworkManager.field_150739_c).get().func_179244_a(this.field_152499_c, i);
+
+                if (packet == null) {
+                    throw new IOException("Bad packet id " + i);
+                } else {
+                    packet.func_148837_a(packetbuffer);
+
+                    if (packetbuffer.readableBytes() > 0) {
+                        throw new IOException(
+                                "Packet "
+                                        + p_decode_1_.channel().attr(NetworkManager.field_150739_c).get().func_150759_c()
+                                        + "/"
+                                        + i
+                                        + " ("
+                                        + packet.getClass().getSimpleName()
+                                        + ") was larger than I expected, found "
+                                        + packetbuffer.readableBytes()
+                                        + " bytes extra whilst reading packet "
+                                        + i
                         );
+                    } else {
+                        p_decode_3_.add(packet);
+
+                        if (field_150800_a.isDebugEnabled()) {
+                            field_150800_a.debug(
+                                    field_150799_b, " IN: [{}:{}] {}", p_decode_1_.channel().attr(NetworkManager.field_150739_c).get(), i, packet.getClass().getName()
+                            );
+                        }
                     }
                 }
             }
+        } catch (Exception e) {
+            field_150800_a.error(e);
         }
     }
 }
